@model AdministrationPortal.ViewModels.Alerts.AlertDetailsViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutUserPortal.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm(null, null, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Alert</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Alert.Id)
        @Html.HiddenFor(model => model.Alert.AlertGroup.AlertCategoryId)    
        @Html.HiddenFor(model => model.Alert.AlertStatus.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.AlertStatus.FirstStatus().Timestamp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Alert.AlertStatus.FirstStatus().Timestamp, new { @readonly = "readonly", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Alert.AlertStatus.FirstStatus().Timestamp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.AlertStatus.Timestamp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Alert.AlertStatus.Timestamp, new { @readonly = "readonly", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Alert.AlertStatus.Timestamp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.AlertTypeId, "AlertTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Alert.AlertTypeId, new { @readonly = "readonly", @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Alert.AlertTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.RuleId, "RuleId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Alert.RuleId, new { @readonly = "readonly", @class = "form-control" })


                @Html.ValidationMessageFor(model => model.Alert.RuleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.Server, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Alert.Server, new { @readonly = "readonly", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Alert.Server, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.Origin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Alert.Origin, new { @readonly = "readonly", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Alert.Origin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.EngineName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Alert.EngineName, new { @readonly = "readonly", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Alert.EngineName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.MessageTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Alert.MessageTypeName, new { @readonly = "readonly", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Alert.MessageTypeName, "", new { @class = "text-danger" })
            </div>
        </div>
        @foreach( var parameter in Model.Alert.AlertParameters)
        {
            <div class="form-group">
            @Html.LabelFor(model => parameter.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => parameter.Id, new { @readonly = "readonly", @class = "form-control" })
                @Html.ValidationMessageFor(model => parameter.Id, "", new { @class = "text-danger" })
            </div>
            </div>
        
        }
        

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.Assignee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Alert.Assignee, new { @readonly = "readonly", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Alert.Assignee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.Severity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Alert.Severity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Alert.Severity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.AlertStatus.StatusCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Alert.AlertStatus.StatusCode, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Alert.AlertStatus.StatusCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alert.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Alert.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Alert.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                @Html.ActionLink("Back to List", "Index", new { ActiveOrArchived = Model.Alert.AlertStatus.StatusCode.ToString(), Page_No = Model.PageNo, sortOrder = Model.SortOrder }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
