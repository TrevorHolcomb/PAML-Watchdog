@model AdministrationPortal.ViewModels.Alerts.AlertPagingCreateView
@using PagedList.Mvc;

@section styles {
    <link href="~/Content/PagedList.css" rel="stylesheet" />
}

@{
    ViewBag.Title = "Alerts";
    Layout = "~/Views/Shared/_LayoutUserPortal.cshtml";
}

<h2>Index</h2>

@*
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
*@
<div class="row">
    <div class="col-xs-12 col-md-8">
        @using (Html.BeginForm())
        {
        <p>
            @Html.DropDownList("sortSelect", Model.sortSelect, new { onchange = @"form.submit();" })
            @Html.TextBox("searchString")
            <input type="submit" value="Search" />
        </p>
        }

        <table class="table table-striped table-hover table-responsive">


            @foreach (var item in Model.pagedList)
            {
            string cssClass = "";
            switch (item.Severity)
            {
            case 5:
            cssClass = "redTableCell";
            break;
            case 4:
            cssClass = "orangeTableCell";
            break;
            case 3:
            cssClass = "yellowTableCell";
            break;
            case 2:
            cssClass = "blueTableCell";
            break;
            default:
            cssClass = "greenTableCell";
            break;
            }


            <tr onclick="location.href = '@(Url.Action("Details", "Alerts", new { id=(int)item.Id, Model.PageNo}))'">

                <td class="@cssClass ">
                    @Html.DisplayFor(modelItem => item.Severity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AlertStatus.StatusCode)<br />
                    @Html.DisplayFor(modelItem => item.Rule.SupportCategory.Name)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.AlertType.Name)<br />
                    @Html.DisplayFor(modelItem => item.AlertStatus.TimeStamp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Origin)
                </td>

            </tr>
            }

        </table>
    </div>
</div>
Page @(Model.pagedList.PageCount < Model.pagedList.PageNumber ? 0 : Model.pagedList.PageNumber) of @Model.pagedList.PageCount
@Html.PagedListPager(Model.pagedList, Page_No => Url.Action("Index",
    new { ActiveOrArchived = Model.status,  Page_No })) 