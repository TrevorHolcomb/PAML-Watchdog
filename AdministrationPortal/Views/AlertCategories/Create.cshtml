@model AdministrationPortal.ViewModels.AlertCategories.AlertCategoryCreateViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>AlertCategory</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        


        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Server, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Server, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Server, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Origin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Origin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Engine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Engine, Model.EngineList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Engine, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Alert Types", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedAlertTypes, new MultiSelectList(Model.AlertTypes, "value", "text", Model.SelectedAlertTypes), new { @class = "form-control hidden", multiple = "multiple", required = "required"} )
                @Html.ValidationMessageFor(model => model.SelectedAlertTypes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    @Scripts.Render("~/Scripts/bootstrap-multiselect.js")
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            var settings = {
                buttonWidth: '100%',
                enableCaseInsensitiveFiltering: true,
                disableIfEmpty: true
            };

            $("#@nameof(Model.SelectedAlertTypes)").multiselect(settings);
        });
    </script>
}